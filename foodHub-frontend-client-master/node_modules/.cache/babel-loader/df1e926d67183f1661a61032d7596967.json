{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project_300\\\\Project_300\\\\foodHub-frontend-client-master\\\\src\\\\pages\\\\restaurant.js\";\nimport React, { useEffect, useState } from \"react\"; //redux\n\nimport { useDispatch, useSelector } from \"react-redux\"; //material-ui\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Spinner from \"../util/spinner/spinner\";\nimport RestaurantInfo from \"../components/RestaurantInfo\";\nimport RestaurantItems from \"../components/RestaurantItems\";\nimport SearchBar from \"../components/SearchBar\";\nimport { fetchRestaurant } from \"../redux/actions/dataActions\";\nexport default function Restaurant(props) {\n  const restId = props.location.state.restId;\n  const {\n    loading\n  } = useSelector(state => state.data);\n  const restaurant = useSelector(state => state.data.restaurant);\n  const {\n    items\n  } = useSelector(state => state.data.restaurant);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (items) {\n      setItemsState(items);\n      setFilteredItemsState(items);\n    }\n  }, [items]);\n  const [itemsState, setItemsState] = useState(items ? [] : null);\n  const [filteredItemsState, setFilteredItemsState] = useState(items ? [] : null);\n\n  const handleSearch = value => {\n    // Variable to hold the original version of the list\n    let currentList = []; // Variable to hold the filtered list before putting into state\n\n    let newList = []; // If the search bar isn't empty\n\n    if (value !== \"\") {\n      // Assign the original list to currentList\n      currentList = itemsState; // Use .filter() to determine which items should be displayed\n      // based on the search terms\n\n      newList = currentList.filter(item => {\n        // change current item to lowercase\n        const lc = item.title.toLowerCase(); // change search term to lowercase\n\n        const filter = value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n    } else {\n      // If the search bar is empty, set newList to original task list\n      newList = itemsState;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    setFilteredItemsState(newList);\n  };\n\n  useEffect(() => {\n    console.log(\"in useEffect restaurant\");\n    dispatch(fetchRestaurant(restId));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RestaurantInfo, Object.assign({}, restaurant, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    style: {\n      marginTop: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    style: {\n      paddingLeft: \"520px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    noWrap: true,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Why starve when you have us\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"fries\",\n    style: {\n      fontSize: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDF5F\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    noWrap: true,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Order from wide varieties of different available Items below\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    style: {\n      marginTop: 20,\n      paddingLeft: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    page: \"items\",\n    handleSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(RestaurantItems, {\n    items: filteredItemsState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["F:/Project_300/Project_300/foodHub-frontend-client-master/src/pages/restaurant.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Typography","Grid","Spinner","RestaurantInfo","RestaurantItems","SearchBar","fetchRestaurant","Restaurant","props","restId","location","state","loading","data","restaurant","items","dispatch","setItemsState","setFilteredItemsState","itemsState","filteredItemsState","handleSearch","value","currentList","newList","filter","item","lc","title","toLowerCase","includes","console","log","marginTop","paddingLeft","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n//redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//material-ui\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Spinner from \"../util/spinner/spinner\";\nimport RestaurantInfo from \"../components/RestaurantInfo\";\nimport RestaurantItems from \"../components/RestaurantItems\";\nimport SearchBar from \"../components/SearchBar\";\nimport { fetchRestaurant } from \"../redux/actions/dataActions\";\n\nexport default function Restaurant(props) {\n  const restId = props.location.state.restId;\n  const { loading } = useSelector((state) => state.data);\n  const restaurant = useSelector((state) => state.data.restaurant);\n  const { items } = useSelector((state) => state.data.restaurant);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (items) {\n      setItemsState(items);\n      setFilteredItemsState(items);\n    }\n  }, [items]);\n\n  const [itemsState, setItemsState] = useState(items ? [] : null);\n  const [filteredItemsState, setFilteredItemsState] = useState(\n    items ? [] : null\n  );\n\n  const handleSearch = (value) => {\n    // Variable to hold the original version of the list\n    let currentList = [];\n    // Variable to hold the filtered list before putting into state\n    let newList = [];\n\n    // If the search bar isn't empty\n    if (value !== \"\") {\n      // Assign the original list to currentList\n      currentList = itemsState;\n\n      // Use .filter() to determine which items should be displayed\n      // based on the search terms\n      newList = currentList.filter((item) => {\n        // change current item to lowercase\n        const lc = item.title.toLowerCase();\n        // change search term to lowercase\n        const filter = value.toLowerCase();\n        // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n        return lc.includes(filter);\n      });\n    } else {\n      // If the search bar is empty, set newList to original task list\n      newList = itemsState;\n    }\n    // Set the filtered state based on what our rules added to newList\n    setFilteredItemsState(newList);\n  };\n\n  useEffect(() => {\n    console.log(\"in useEffect restaurant\");\n    dispatch(fetchRestaurant(restId));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <RestaurantInfo {...restaurant} />\n          <Grid container direction=\"row\" style={{ marginTop: 40 }}>\n            <Grid\n              item\n              xs={12}\n              sm={8}\n              style={{\n                paddingLeft: \"520px\",\n              }}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                noWrap\n                style={{ textAlign: \"center\" }}\n              >\n                Why starve when you have us&nbsp;&nbsp;\n                <span role=\"img\" aria-label=\"fries\" style={{ fontSize: 40 }}>\n                  🍟\n                </span>\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                noWrap\n                style={{ textAlign: \"center\" }}\n              >\n                Order from wide varieties of different available Items below\n              </Typography>\n              <br />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sm={4}\n              style={{ marginTop: 20, paddingLeft: 40 }}\n            >\n              <SearchBar page=\"items\" handleSearch={handleSearch} />\n            </Grid>\n            <RestaurantItems items={filteredItemsState} />\n          </Grid>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}