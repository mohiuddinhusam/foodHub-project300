{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project_300\\\\Project_300\\\\foodHub-frontend-client-master\\\\src\\\\pages\\\\sign-up.js\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\"; //material-ui\n\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; //custom-hook\n\nimport useForm from \"../hooks/forms\";\nimport { signupUser } from \"../redux/actions/authActions\";\nconst useStyles = makeStyles(theme => ({ ...theme.spreadThis,\n  title: {\n    margin: \"48px 0px 10px 0px\"\n  }\n}));\nexport default function Register() {\n  const classes = useStyles();\n  const {\n    loading,\n    serverError,\n    errors\n  } = useSelector(state => state.UI);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const signupHandle = props => {\n    const newUserData = {\n      email: inputs.email,\n      firstName: inputs.firstName,\n      lastName: inputs.lastName,\n      role: \"ROLE_USER\",\n      password: inputs.password,\n      confirmPassword: inputs.confirmPassword\n    };\n    dispatch(signupUser(newUserData, history));\n  };\n\n  const {\n    inputs,\n    handleInputChange,\n    handleSubmit\n  } = useForm({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }, signupHandle); // console.log(errors);\n\n  let emailError = null;\n  let passwordError = null;\n  let confirmPasswordError = null;\n  let firstNameEmptyError = null;\n  let lastNameEmptyError = null;\n\n  if (errors) {\n    if (typeof errors !== \"string\") {\n      for (let i = 0; i < errors.length; i++) {\n        if (errors[i].msg.includes(\"First Name\")) firstNameEmptyError = errors[i].msg;\n        if (errors[i].msg.includes(\"Last Name\")) lastNameEmptyError = errors[i].msg;\n        if (errors[i].msg.includes(\"valid email\")) emailError = errors[i].msg;\n        if (errors[i].msg.includes(\"Email address already\")) emailError = errors[i].msg;\n        if (errors[i].msg.includes(\"least 6 characters long\")) passwordError = errors[i].msg;\n        if (errors[i].msg.includes(\"Passwords have to\")) confirmPasswordError = errors[i].msg;\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Register\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Pizza Emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"\\uD83C\\uDF55\")), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"firstName\",\n    name: \"firstName\",\n    label: \"FirstName\",\n    onChange: handleInputChange,\n    value: inputs.firstName,\n    className: classes.textField,\n    helperText: firstNameEmptyError,\n    error: firstNameEmptyError ? true : false,\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"lastName\",\n    name: \"lastName\",\n    label: \"LastName\",\n    onChange: handleInputChange,\n    value: inputs.lastName,\n    className: classes.textField,\n    helperText: lastNameEmptyError,\n    error: lastNameEmptyError ? true : false,\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    onChange: handleInputChange,\n    value: inputs.email,\n    className: classes.textField,\n    fullWidth: true,\n    helperText: emailError,\n    error: emailError ? true : false,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    onChange: handleInputChange,\n    value: inputs.password,\n    className: classes.textField,\n    helperText: passwordError,\n    error: passwordError ? true : false,\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"confirmPassword\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    label: \"Confirm Password\",\n    onChange: handleInputChange,\n    value: inputs.confirmPassword,\n    className: classes.textField,\n    helperText: passwordError ? passwordError : confirmPasswordError,\n    error: passwordError ? true : confirmPasswordError ? true : false,\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), serverError && /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.customError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"server error, please try again\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Sign-up\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 30,\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.small,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Already have an account ? Login \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 45\n    }\n  }, \"here\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["F:/Project_300/Project_300/foodHub-frontend-client-master/src/pages/sign-up.js"],"names":["React","useHistory","Link","useDispatch","useSelector","makeStyles","Grid","Typography","TextField","Button","CircularProgress","useForm","signupUser","useStyles","theme","spreadThis","title","margin","Register","classes","loading","serverError","errors","state","UI","dispatch","history","signupHandle","props","newUserData","email","inputs","firstName","lastName","role","password","confirmPassword","handleInputChange","handleSubmit","emailError","passwordError","confirmPasswordError","firstNameEmptyError","lastNameEmptyError","i","length","msg","includes","form","textField","customError","button","progress","small"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY,EACvC,GAAGA,KAAK,CAACC,UAD8B;AAEvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH;AAFgC,CAAZ,CAAD,CAA5B;AAOA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAmClB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,EAAlB,CAApD;AACA,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,OAAO,GAAGzB,UAAU,EAA1B;;AAEA,QAAM0B,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,WAAW,GAAG;AAClBC,MAAAA,KAAK,EAAEC,MAAM,CAACD,KADI;AAElBE,MAAAA,SAAS,EAAED,MAAM,CAACC,SAFA;AAGlBC,MAAAA,QAAQ,EAAEF,MAAM,CAACE,QAHC;AAIlBC,MAAAA,IAAI,EAAE,WAJY;AAKlBC,MAAAA,QAAQ,EAAEJ,MAAM,CAACI,QALC;AAMlBC,MAAAA,eAAe,EAAEL,MAAM,CAACK;AANN,KAApB;AAQAX,IAAAA,QAAQ,CAACb,UAAU,CAACiB,WAAD,EAAcH,OAAd,CAAX,CAAR;AACD,GAVD;;AAYA,QAAM;AAAEK,IAAAA,MAAF;AAAUM,IAAAA,iBAAV;AAA6BC,IAAAA;AAA7B,MAA8C3B,OAAO,CACzD;AACEqB,IAAAA,SAAS,EAAE,EADb;AAEEC,IAAAA,QAAQ,EAAE,EAFZ;AAGEH,IAAAA,KAAK,EAAE,EAHT;AAIEK,IAAAA,QAAQ,EAAE,EAJZ;AAKEC,IAAAA,eAAe,EAAE;AALnB,GADyD,EAQzDT,YARyD,CAA3D,CAnBiC,CA8BjC;;AACA,MAAIY,UAAU,GAAG,IAAjB;AACA,MAAIC,aAAa,GAAG,IAApB;AACA,MAAIC,oBAAoB,GAAG,IAA3B;AACA,MAAIC,mBAAmB,GAAG,IAA1B;AACA,MAAIC,kBAAkB,GAAG,IAAzB;;AAEA,MAAIrB,MAAJ,EAAY;AACV,QAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,MAAM,CAACuB,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,YAAItB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAV,CAAcC,QAAd,CAAuB,YAAvB,CAAJ,EACEL,mBAAmB,GAAGpB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAhC;AACF,YAAIxB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAV,CAAcC,QAAd,CAAuB,WAAvB,CAAJ,EACEJ,kBAAkB,GAAGrB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAA/B;AACF,YAAIxB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAV,CAAcC,QAAd,CAAuB,aAAvB,CAAJ,EAA2CR,UAAU,GAAGjB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAvB;AAC3C,YAAIxB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAV,CAAcC,QAAd,CAAuB,uBAAvB,CAAJ,EACER,UAAU,GAAGjB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAvB;AACF,YAAIxB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAV,CAAcC,QAAd,CAAuB,yBAAvB,CAAJ,EACEP,aAAa,GAAGlB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAA1B;AACF,YAAIxB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAV,CAAcC,QAAd,CAAuB,mBAAvB,CAAJ,EACEN,oBAAoB,GAAGnB,MAAM,CAACsB,CAAD,CAAN,CAAUE,GAAjC;AACH;AACF;AACF;;AAED,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAE3B,OAAO,CAAC6B,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAE7B,OAAO,CAACH,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACW,GADX,eAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,eAOE;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAEsB,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAC,WAHR;AAIE,IAAA,QAAQ,EAAED,iBAJZ;AAKE,IAAA,KAAK,EAAEN,MAAM,CAACC,SALhB;AAME,IAAA,SAAS,EAAEb,OAAO,CAAC8B,SANrB;AAOE,IAAA,UAAU,EAAEP,mBAPd;AAQE,IAAA,KAAK,EAAEA,mBAAmB,GAAG,IAAH,GAAU,KARtC;AASE,IAAA,SAAS,MATX;AAUE,IAAA,QAAQ,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAaE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,QAAQ,EAAEL,iBAJZ;AAKE,IAAA,KAAK,EAAEN,MAAM,CAACE,QALhB;AAME,IAAA,SAAS,EAAEd,OAAO,CAAC8B,SANrB;AAOE,IAAA,UAAU,EAAEN,kBAPd;AAQE,IAAA,KAAK,EAAEA,kBAAkB,GAAG,IAAH,GAAU,KARrC;AASE,IAAA,SAAS,MATX;AAUE,IAAA,QAAQ,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAyBE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,QAAQ,EAAEN,iBAJZ;AAKE,IAAA,KAAK,EAAEN,MAAM,CAACD,KALhB;AAME,IAAA,SAAS,EAAEX,OAAO,CAAC8B,SANrB;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,UAAU,EAAEV,UARd;AASE,IAAA,KAAK,EAAEA,UAAU,GAAG,IAAH,GAAU,KAT7B;AAUE,IAAA,QAAQ,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,eAqCE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,QAAQ,EAAEF,iBALZ;AAME,IAAA,KAAK,EAAEN,MAAM,CAACI,QANhB;AAOE,IAAA,SAAS,EAAEhB,OAAO,CAAC8B,SAPrB;AAQE,IAAA,UAAU,EAAET,aARd;AASE,IAAA,KAAK,EAAEA,aAAa,GAAG,IAAH,GAAU,KAThC;AAUE,IAAA,SAAS,MAVX;AAWE,IAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,eAkDE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAC,kBAJR;AAKE,IAAA,QAAQ,EAAEH,iBALZ;AAME,IAAA,KAAK,EAAEN,MAAM,CAACK,eANhB;AAOE,IAAA,SAAS,EAAEjB,OAAO,CAAC8B,SAPrB;AAQE,IAAA,UAAU,EAAET,aAAa,GAAGA,aAAH,GAAmBC,oBAR9C;AASE,IAAA,KAAK,EAAED,aAAa,GAAG,IAAH,GAAUC,oBAAoB,GAAG,IAAH,GAAU,KAT9D;AAUE,IAAA,SAAS,MAVX;AAWE,IAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDF,EAgEGpB,WAAW,iBACV,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAEF,OAAO,CAAC+B,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gCADH,CAjEJ,eAsEE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,EAAE/B,OAAO,CAACgC,MAJrB;AAKE,IAAA,QAAQ,EAAE/B,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQGA,OAAO,iBACN,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,EAAxB;AAA4B,IAAA,SAAS,EAAED,OAAO,CAACiC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAtEF,eAkFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlFF,eAmFE;AAAO,IAAA,SAAS,EAAEjC,OAAO,CAACkC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACkC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlC,CAnFF,CAPF,CAFF,eAiGE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjGF,CADF;AAqGD","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//material-ui\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n//custom-hook\nimport useForm from \"../hooks/forms\";\n\nimport { signupUser } from \"../redux/actions/authActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.spreadThis,\n  title: {\n    margin: \"48px 0px 10px 0px\",\n  },\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n\n  const { loading, serverError, errors } = useSelector((state) => state.UI);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const signupHandle = (props) => {\n    const newUserData = {\n      email: inputs.email,\n      firstName: inputs.firstName,\n      lastName: inputs.lastName,\n      role: \"ROLE_USER\",\n      password: inputs.password,\n      confirmPassword: inputs.confirmPassword,\n    };\n    dispatch(signupUser(newUserData, history));\n  };\n\n  const { inputs, handleInputChange, handleSubmit } = useForm(\n    {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n    signupHandle\n  );\n\n  // console.log(errors);\n  let emailError = null;\n  let passwordError = null;\n  let confirmPasswordError = null;\n  let firstNameEmptyError = null;\n  let lastNameEmptyError = null;\n\n  if (errors) {\n    if (typeof errors !== \"string\") {\n      for (let i = 0; i < errors.length; i++) {\n        if (errors[i].msg.includes(\"First Name\"))\n          firstNameEmptyError = errors[i].msg;\n        if (errors[i].msg.includes(\"Last Name\"))\n          lastNameEmptyError = errors[i].msg;\n        if (errors[i].msg.includes(\"valid email\")) emailError = errors[i].msg;\n        if (errors[i].msg.includes(\"Email address already\"))\n          emailError = errors[i].msg;\n        if (errors[i].msg.includes(\"least 6 characters long\"))\n          passwordError = errors[i].msg;\n        if (errors[i].msg.includes(\"Passwords have to\"))\n          confirmPasswordError = errors[i].msg;\n      }\n    }\n  }\n\n  return (\n    <Grid container className={classes.form}>\n      <Grid item sm />\n      <Grid item sm>\n        <Typography variant=\"h3\" className={classes.title}>\n          Register{\" \"}\n          <span role=\"img\" aria-label=\"Pizza Emoji\">\n            🍕\n          </span>\n        </Typography>\n        <form noValidate onSubmit={handleSubmit}>\n          <TextField\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"FirstName\"\n            onChange={handleInputChange}\n            value={inputs.firstName}\n            className={classes.textField}\n            helperText={firstNameEmptyError}\n            error={firstNameEmptyError ? true : false}\n            fullWidth\n            required\n          />\n          <TextField\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"LastName\"\n            onChange={handleInputChange}\n            value={inputs.lastName}\n            className={classes.textField}\n            helperText={lastNameEmptyError}\n            error={lastNameEmptyError ? true : false}\n            fullWidth\n            required\n          />\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            onChange={handleInputChange}\n            value={inputs.email}\n            className={classes.textField}\n            fullWidth\n            helperText={emailError}\n            error={emailError ? true : false}\n            required\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            onChange={handleInputChange}\n            value={inputs.password}\n            className={classes.textField}\n            helperText={passwordError}\n            error={passwordError ? true : false}\n            fullWidth\n            required\n          />\n          <TextField\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            onChange={handleInputChange}\n            value={inputs.confirmPassword}\n            className={classes.textField}\n            helperText={passwordError ? passwordError : confirmPasswordError}\n            error={passwordError ? true : confirmPasswordError ? true : false}\n            fullWidth\n            required\n          />\n\n          {serverError && (\n            <Typography variant=\"body2\" className={classes.customError}>\n              {\"server error, please try again\"}\n            </Typography>\n          )}\n\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            disabled={loading}\n          >\n            Sign-up\n            {loading && (\n              <CircularProgress size={30} className={classes.progress} />\n            )}\n          </Button>\n          <br />\n          <small className={classes.small}>\n            Already have an account ? Login <Link to=\"/login\">here</Link>\n          </small>\n        </form>\n      </Grid>\n      <Grid item sm />\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}